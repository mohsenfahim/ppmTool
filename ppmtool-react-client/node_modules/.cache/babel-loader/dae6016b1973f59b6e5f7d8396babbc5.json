{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fahimm\\\\IdeaProjects\\\\ppmtool\\\\ppmtool-react-client\\\\src\\\\components\\\\ProjectBoard\\\\ProjectBoard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  // constructor to handle errors.\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const project_tasks = this.props.backlog.project_tasks;\n    const errors = this.state.errors;\n    let BoardContenet;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-ceneter\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, errors.projectNotFound);\n        }\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/addProjectTask/${id}`,\n      className: \"btn btn-primary mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Create Project Task\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Backlog, {\n      project_tasks_prop: project_tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getBacklog\n})(ProjectBoard);","map":{"version":3,"sources":["C:/Users/fahimm/IdeaProjects/ppmtool/ppmtool-react-client/src/components/ProjectBoard/ProjectBoard.js"],"names":["React","Component","Link","Backlog","connect","PropTypes","getBacklog","ProjectBoard","constructor","state","errors","componentDidMount","id","props","match","params","componentWillReceiveProps","nextProps","setState","render","project_tasks","backlog","BoardContenet","boardAlgorithm","length","projectNotFound","propTypes","object","isRequired","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnC;AACAO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,EADU,GACH,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADd,CACVH,EADU;AAElB,SAAKC,KAAL,CAAWP,UAAX,CAAsBM,EAAtB;AACD;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACP,MAAd,EAAsB;AACpB,WAAKQ,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEO,SAAS,CAACP;AAApB,OAAd;AACD;AACF;;AACDS,EAAAA,MAAM,GAAG;AAAA,UACCP,EADD,GACQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADzB,CACCH,EADD;AAAA,UAECQ,aAFD,GAEmB,KAAKP,KAAL,CAAWQ,OAF9B,CAECD,aAFD;AAAA,UAGCV,MAHD,GAGY,KAAKD,KAHjB,CAGCC,MAHD;AAKP,QAAIY,aAAJ;;AAEA,UAAMC,cAAc,GAAG,CAACb,MAAD,EAASU,aAAT,KAA2B;AAChD,UAAIA,aAAa,CAACI,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,YAAId,MAAM,CAACe,eAAX,EAA4B;AAC1B,iBACE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAiD,YAAA,IAAI,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGf,MAAM,CAACe,eADV,CADF;AAKD;AACF;AACF,KAVD;;AAYA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,mBAAkBb,EAAG,EAAhC;AAAmC,MAAA,SAAS,EAAC,sBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,OAAD;AAAS,MAAA,kBAAkB,EAAEQ,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AA/CkC;;AAkDrCb,YAAY,CAACmB,SAAb,GAAyB;AACvBL,EAAAA,OAAO,EAAEhB,SAAS,CAACsB,MAAV,CAAiBC,UADH;AAEvBtB,EAAAA,UAAU,EAAED,SAAS,CAACwB,IAAV,CAAeD,UAFJ;AAGvBlB,EAAAA,MAAM,EAAEL,SAAS,CAACsB,MAAV,CAAiBC;AAHF,CAAzB;;AAKA,MAAME,eAAe,GAAGrB,KAAK,KAAK;AAChCY,EAAAA,OAAO,EAAEZ,KAAK,CAACY,OADiB;AAEhCX,EAAAA,MAAM,EAAED,KAAK,CAACC;AAFkB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAAC0B,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,YAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  // constructor to handle errors.\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContenet;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-ceneter\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        <Backlog project_tasks_prop={project_tasks} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n"]},"metadata":{},"sourceType":"module"}