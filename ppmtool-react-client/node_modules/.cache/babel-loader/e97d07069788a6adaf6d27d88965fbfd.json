{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const login = LoginRequest => async dispatch => {\n  try {\n    //post ==> login request endpoint\n    const res = await axios.post(\"/api/users/login\", LoginRequest); // extract token from res.data\n\n    const token = res.data.token; // store the token in the localstorage\n\n    localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n    setJWTToken(token); // decode token on react\n    // dispatch to our security reducer\n  } catch (error) {}\n};","map":{"version":3,"sources":["C:/Users/fahimm/IdeaProjects/ppmtool/ppmtool-react-client/src/actions/securityActions.js"],"names":["axios","GET_ERRORS","setJWTToken","createNewUser","newUser","history","dispatch","post","push","type","payload","error","response","data","login","LoginRequest","res","token","localStorage","setItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACF,UAAMN,KAAK,CAACO,IAAN,CAAW,qBAAX,EAAkCH,OAAlC,CAAN;AACAC,IAAAA,OAAO,CAACG,IAAR,CAAa,QAAb;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeC;AAFjB,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,KAAK,GAAGC,YAAY,IAAI,MAAMT,QAAN,IAAkB;AACrD,MAAI;AACF;AACA,UAAMU,GAAG,GAAG,MAAMhB,KAAK,CAACO,IAAN,CAAW,kBAAX,EAA+BQ,YAA/B,CAAlB,CAFE,CAIF;;AAJE,UAKME,KALN,GAKgBD,GAAG,CAACH,IALpB,CAKMI,KALN,EAOF;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EARE,CAUF;;AACAf,IAAAA,WAAW,CAACe,KAAD,CAAX,CAXE,CAaF;AACA;AACD,GAfD,CAeE,OAAON,KAAP,EAAc,CAAE;AACnB,CAjBM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    //post ==> login request endpoint\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n\r\n    // store the token in the localstorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n\r\n    // decode token on react\r\n    // dispatch to our security reducer\r\n  } catch (error) {}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}